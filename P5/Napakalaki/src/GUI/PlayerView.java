/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JPanel;
import napakalaki.Napakalaki;
import napakalaki.Player;
import napakalaki.Treasure;
/**
 *
 * @author Victor Vallecillo Morilla
 */
public class PlayerView extends javax.swing.JPanel {
    Player playerModel;
    private Napakalaki napakalakiModel;

    public PlayerView() {
        initComponents();
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        Robar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        hacerVisible = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        DescartarTesoros = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        DescartarTodos = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cnivelcombate = new javax.swing.JTextField();
        cnombre = new javax.swing.JTextField();
        cnivel = new javax.swing.JTextField();
        cenemigo = new javax.swing.JTextField();
        hiddenTreasurePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        visibleTreasurePanel = new javax.swing.JPanel();
        pendingBadConsequenceView1 = new GUI.PendingBadConsequenceView();

        setBorder(javax.swing.BorderFactory.createTitledBorder("PlayerView"));

        jLabel2.setText("Nivel:");

        Robar.setText("Steal Treasure");
        Robar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RobarActionPerformed(evt);
            }
        });

        jLabel3.setText("Nivel de Combate:");

        hacerVisible.setText("Make Visible");
        hacerVisible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hacerVisibleActionPerformed(evt);
            }
        });

        jLabel4.setText("Enemigo:");

        DescartarTesoros.setText("Discard Treasures");
        DescartarTesoros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DescartarTesorosActionPerformed(evt);
            }
        });

        jLabel5.setText("Tesoros Ocultos:");

        DescartarTodos.setText("Discard All Treasures");
        DescartarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DescartarTodosActionPerformed(evt);
            }
        });

        jLabel6.setText("Tesoros Visibles:");

        cnombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnombreActionPerformed(evt);
            }
        });

        cnivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnivelActionPerformed(evt);
            }
        });

        hiddenTreasurePanel.setBackground(new java.awt.Color(245, 243, 243));
        hiddenTreasurePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Nombre:");

        visibleTreasurePanel.setBackground(new java.awt.Color(245, 243, 243));
        visibleTreasurePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pendingBadConsequenceView1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2))
                                        .addGap(73, 73, 73)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cnivel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Robar)
                                            .addComponent(hacerVisible))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(DescartarTodos)
                                            .addComponent(DescartarTesoros)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cnivelcombate, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cenemigo, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hiddenTreasurePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(visibleTreasurePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Robar)
                            .addComponent(DescartarTesoros))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hacerVisible)
                            .addComponent(DescartarTodos)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(cnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cnivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cnivelcombate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cenemigo)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hiddenTreasurePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(visibleTreasurePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pendingBadConsequenceView1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cnivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnivelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cnivelActionPerformed

    private void hacerVisibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hacerVisibleActionPerformed

        ArrayList<Treasure> selHidden = getSelectedTreasures(hiddenTreasurePanel);
        
        for(Treasure treasure : selHidden){
            napakalakiModel.makeTreasuresVisible(selHidden);
        }
        
        setPlayer(napakalakiModel.getCurrentPlayer());
        repaint();

    }//GEN-LAST:event_hacerVisibleActionPerformed

    private void RobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RobarActionPerformed
        this.playerModel.stealTreasure();
    }//GEN-LAST:event_RobarActionPerformed

    private void DescartarTesorosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DescartarTesorosActionPerformed

        ArrayList<Treasure> selVisible = getSelectedTreasures(visibleTreasurePanel);
        ArrayList<Treasure> selHidden = getSelectedTreasures(hiddenTreasurePanel);

        napakalakiModel.discardVisibleTreasures(selVisible);
        napakalakiModel.discardHiddenTreasures(selHidden);

        setPlayer(napakalakiModel.getCurrentPlayer());

        repaint();
    }//GEN-LAST:event_DescartarTesorosActionPerformed

    private void cnombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cnombreActionPerformed

    private void DescartarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DescartarTodosActionPerformed
        playerModel.discardAllTreasures();
        setPlayer(napakalakiModel.getCurrentPlayer());
        repaint();
    }//GEN-LAST:event_DescartarTodosActionPerformed

    
    public void setPlayer(Player p)
    {
        playerModel=p;
        
        this.cnombre.setText(playerModel.getName());
        this.cenemigo.setText(playerModel.getEnemy().toString());
        this.cnivel.setText(Integer.toString(p.getLevel()));
        this.cnivelcombate.setText(String.valueOf(p.getLevels()));
        this.pendingBadConsequenceView1.setPendingBadConsequence(playerModel.getPendingBadConsequence());
        
        this.fillTreasurePanel(this.hiddenTreasurePanel, this.playerModel.getHiddenTreasures() );
        this.fillTreasurePanel(this.visibleTreasurePanel, this.playerModel.getVisibleTreasures() );
        repaint();
        revalidate();
    }
       
    public void fillTreasurePanel (JPanel aPanel, ArrayList<Treasure> aList) 
    {
        // Se elimina la información antigua
        aPanel.removeAll();
        // Se recorre la lista de tesoros construyendo y añadiendo sus vistas al panel
        for (Treasure t : aList) 
        {
            TreasureView aTreasureView = new TreasureView();
            aTreasureView.setTreasure (t);
            aTreasureView.setVisible (true);
            aPanel.add (aTreasureView);
        }
        // Se fuerza la actualización visual del panel
        aPanel.repaint();
        aPanel.revalidate();
    }

    public void setNapakalaki(Napakalaki np){
        napakalakiModel = np;
    }
    
    public ArrayList<Treasure> getSelectedTreasures( JPanel aPanel )
    {
        
       /*Se recorren los tesoros que contiene el panel,
        almacenando en un vector aquellos que están seleccionados.
        Finalmente se devuelve dicho vector.*/
        
        TreasureView tv;
        ArrayList<Treasure> output = new ArrayList();
        for (Component c : aPanel.getComponents()) 
        {
            tv = (TreasureView) c;
            if ( tv.isSelected() )
            output.add ( tv.getTreasure() );
        }
        return output;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DescartarTesoros;
    private javax.swing.JButton DescartarTodos;
    private javax.swing.JButton Robar;
    private javax.swing.JTextField cenemigo;
    private javax.swing.JTextField cnivel;
    private javax.swing.JTextField cnivelcombate;
    private javax.swing.JTextField cnombre;
    private javax.swing.JButton hacerVisible;
    private javax.swing.JPanel hiddenTreasurePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private GUI.PendingBadConsequenceView pendingBadConsequenceView1;
    private javax.swing.JPanel visibleTreasurePanel;
    // End of variables declaration//GEN-END:variables
}
